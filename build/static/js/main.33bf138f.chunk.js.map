{"version":3,"sources":["components/ImgCard/index.js","components/CardContainer/index.js","components/Header.js","components/Footer.js","components/Navbar.js","App.js","index.js"],"names":["ImgCard","props","react_default","a","createElement","className","src","id","alt","onClick","handleClick","CardContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","target","state","selectedImages","includes","setState","score","updateTopScore","updateCurrentScore","updateMessage","concat","imgs","sort","Math","random","topScore","friends","_this2","map","friend","components_ImgCard","image","key","name","Component","Header","Footer","Navbar","href","message","App","newMessage","newScore","newTopScore","components_Navbar","components_Header","components_CardContainer","components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.33bf138f.chunk.js","sourcesContent":["import React from 'react';\nimport \"./style.css\";\n\nconst ImgCard = props => (\n  <div className=\"card\">\n    <img className=\"img-container\" src={props.src} id={props.id}\n      alt={props.alt} onClick={props.handleClick} />\n  </div>\n)\n\n\nexport default ImgCard;","import React, {Component} from 'react';\nimport ImgCard from \"./../ImgCard\";\nimport friends from \"./../../friends.json\";\n\nclass CardContainer extends Component {\n\n  constructor(props) {\n    super(props);\n    // Set initial state\n    this.state = {\n      score: 0,\n      topScore: 0,\n      imgs: friends,\n      selectedImages: []\n    };\n  }\n\n  // when the user clicks on an img card\n  handleClick = (e) => {\n    let id = e.target.id;\n\n    // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n\n    if (this.state.selectedImages.includes(id)) {\n      // Game Over\n      this.setState({\n        score: 0,\n        selectedImages: [],\n      });\n\n      // Update the parent's component display\n      this.props.updateTopScore(this.state.score);\n      this.props.updateCurrentScore(0);\n      this.props.updateMessage(\"Incorrect... Click an image to start again!\")\n\n    } else {\n      // Keep playing\n      this.setState({\n        selectedImages: this.state.selectedImages.concat([id]),\n        score: this.state.score + 1,\n      });\n\n      // Update the parent component's display\n      this.props.updateCurrentScore(this.state.score + 1);\n      this.props.updateMessage(\"Correct!!\")\n    }\n\n    // Shuffle images\n    this.setState({\n      imgs: this.state.imgs.sort(() => Math.random() - 0.5)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"card-container\">\n        <div className=\"row mb-5\">\n          {friends.map(friend =>\n          <ImgCard src={friend.image} key={friend.id} id={friend.id} alt={friend.name}\n            handleClick={this.handleClick} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardContainer;","import React from 'react';\n\nconst Header = props => (\n  <header className=\"header text-center\" id=\"header-container\">\n    <h1><b>Clicky Game</b></h1>\n    <h3 className=\"subtitle\">Click on an image to earn points, but don't click on any more than once!</h3>\n  </header>\n)\n\nexport default Header;","import React from 'react';\n\nconst Footer = props => (\n  <footer className=\"footer text-left\" id=\"footer-container\">\n    <div className=\"bottom\">Clicky Game</div>\n  </footer>\n)\n\nexport default Footer;","import React from \"react\";\n\nconst Navbar = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top bg-dark\">\n    <a className=\"navbar-brand mr-5\" href=\"/\" id=\"logo\"><h3>Clicky Game</h3></a>\n    <h5 className=\"navbar-brand\">{props.message}</h5>\n    <h4 className=\"ml-auto mt-2\" id=\"counters\">\n      Score: {props.score} | Top score: {props.topScore}\n    </h4>\n\n  </nav>\n)\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport CardContainer from \"./components/CardContainer\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Set initial state\n  state = {\n    topScore: 0,\n    score: 0,\n    message: \"Click an image to begin!\"\n  };\n\n  updateMessage = (newMessage) => {\n    // Update current message\n    this.setState({\n      message: newMessage\n    });\n  };\n\n  updateCurrentScore = (newScore) => {\n    // Update current score\n    this.setState({\n      score: newScore\n    });\n  };\n\n  updateTopScore = (newTopScore) => {\n    // Update top score\n    if (newTopScore > this.state.topScore) {\n      this.setState({\n        topScore: newTopScore\n      })\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n        {/* <Navbar score={this.state.score} topScore={this.state.topScore}/> */}\n        <Navbar message={this.state.message} score={this.state.score} topScore={this.state.topScore}/>\n        <Header/>\n        <CardContainer updateMessage={this.updateMessage} updateCurrentScore={this.updateCurrentScore}\n          updateTopScore={this.updateTopScore}/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}